#!___NEWLISPPATH___
(load "wot.lsp")
(print "Content-type: text/html\n\n")
(set (quote sponsoremail) (CGI:get "sponsoremail"))
(wot:checkemailaddress sponsoremail)
(wot:verifypassword sponsoremail (CGI:get "sponsorpassword"))
; only allow upload if we already trust sponsor, we don't
; want an untrusted sponsor to just upload a new key
(set (quote returnlist) (catch (wot:checktrust sponsoremail)))
(if (= (nth 0 returnlist) nil)
  (begin
    (CGI:put-page "sponsoruntrusted.html")
    (exit)
  )
)
(set (quote sponsorpubkey) (CGI:get "sponsorpubkey"))
(set (quote badfound) (catch (wot:checkkey sponsorpubkey)))
;(print badfound)
(if (!= badfound nil)
  (begin
    ;(print "bad sponsorpubkey found ")
    (CGI:put-page "uploadfailed.html")
    (exit)
  )
)
(set (quote runstring) (string wot:MKTEMP " --tmpdir=" wot:TEMPDIR))
;(print wot:MKTEMP "\n")
;(print wot:TEMPDIR "\n")
;(print "runstring: >" keyfile "<")
(set (quote keyfile) (trim (nth 1 (catch (wot:runit runstring nil 20)))))
;(print "keyfile: " keyfile)
(replace " " sponsorpubkey "+")
(replace "\r" sponsorpubkey "")
(replace "-----BEGIN+PGP+PUBLIC+KEY+BLOCK-----" sponsorpubkey "-----BEGIN PGP PUBLIC KEY BLOCK-----")
(replace "-----END+PGP+PUBLIC+KEY+BLOCK-----" sponsorpubkey "-----END PGP PUBLIC KEY BLOCK-----")
;(print sponsorpubkey)
(write-file keyfile sponsorpubkey)
; check to see if email address in imported key matches sponsor email
(set (quote runstring) (string wot:MKTEMP " --tmpdir=" wot:TEMPDIR))
;(print "MKTEMP pubringfile <br>\n")
(set (quote pubringfile) (trim (nth 1 (catch (wot:runit runstring nil 20)))))
(set (quote runstring) (string wot:MKTEMP " --tmpdir=" wot:TEMPDIR))
;(print "MKTEMP secringfile <br>\n")
(set (quote secringfile) (trim (nth 1 (catch (wot:runit runstring nil 20)))))
(set (quote runstring) (string wot:MKTEMP " --tmpdir=" wot:TEMPDIR))
;(print "MKTEMP trustdbfile <br>\n")
(set (quote trustdbfile) (trim (nth 1 (catch (wot:runit runstring nil 20)))))
(copy-file wot:PUBTRUSTDB trustdbfile)
(set (quote returnlist) (catch (wot:importkey keyfile pubringfile secringfile trustdbfile)))
;(print returnlist "<br>\n")
;gpg: key 03F6F0E8: public key
;(print "returned importkey runitlist: " returnlist "\n<br>")
(set (quote searchstring) (string ".*gpg: key (\\S+): public key.*"))
;(print "searchstring: " searchstring)
;(write-file "t.out" (nth 2 returnlist))
(dolist (x (find-all searchstring (nth 2 returnlist) $1 ))
  (begin
    (set (quote sponsorkeyid) x)
  )
)
;(print "sponsorkeyid: " sponsorkeyid "\n<br>")
(set (quote returnlist) (catch (wot:listkeys sponsoremail pubringfile secringfile trustdbfile)))
(if
  (or
    (= returnlist nil)
    (= (length returnlist) 0)
  )
  (begin
    ;(print "returnlist from listkeys: >" returnlist "<")
    (CGI:put-page "emailmismatch.html")
    (exit)
  )
)
;(set (quote runitlist) (catch (wot:listkeys "bogus@example.com" pubringfile secringfile trustdbfile)))
;(print runitlist)
;(print runitlist)
(set (quote runitlist) (catch (wot:importkey keyfile)))
(set (quote foundkeyid) nil)
(set (quote searchstring) (string ".*gpg: key (" sponsorkeyid "): .*(imported|not changed)"))
;(print "searchstring: " searchstring "<br>\n")
(dolist (x (find-all searchstring (nth 2 runitlist) $1 ))
  (begin
    (set (quote foundkeyid) x)
  )
)
;(if (!= (int (nth 0 runitlist)) 0)
(if (= foundkeyid nil)
  (begin
    ;(print "foundkeyid nil: " runitlist "<br>\n")
    (CGI:put-page "uploadfailed.html")
    (exit)
  )
)
(delete-file pubringfile)
(delete-file secringfile)
(delete-file trustdbfile)
(delete-file keyfile)
;(set (quote returnlist) (catch (wot:trustkey sponsoremail)))
;will need to get an existing sponsor to sponsor so the key
;gets tsigned
;(set (quote returnlist) (catch (wot:checktrust sponsoremail)))
;(set (quote returnlist) (catch (wot:listormakekey sponsoremail nil)))
(set (quote returnlist) (catch (wot:listkeys sponsorkeyid)))
;(print returnlist)
(if (= (int (nth 0 runitlist)) 0)
;(if (!= returnlist nil)
  (begin
    (CGI:put-page "keyuploaded.html")
    (exit)
  )
  (begin
    (CGI:put-page "uploadfailed.html")
    (exit)
  )
)
;(print "</body>\n")
;(print "</html>\n")
(exit)
